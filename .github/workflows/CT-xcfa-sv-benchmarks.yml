name: Test xcfa-cli with selected tasks from sv-benchmarks

on:
  workflow_dispatch: null

jobs:
  build:
    name: Build theta-xcfa-cli
    runs-on:
      - ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17
      - name: Setup and execute Gradle 'build' task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: theta-xcfa-cli:build
      - run: mv subprojects/xcfa/xcfa-cli/build/libs/theta-xcfa-cli-*-all.jar theta.jar
      - uses: actions/upload-artifact@v3
        with:
          name: theta.jar
          path: theta.jar

  assemble:
    name: Assemble theta.zip
    runs-on:
      - ubuntu-latest
    needs: 
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: theta.jar
      - run: cp scripts/theta-start.sh ./
      - run: cp scripts/portfolio.kts ./complex.kts
      - run: mkdir solvers
      - run: zip theta.zip theta.jar theta-start.sh lib solvers complex.kts -r
      - uses: actions/upload-artifact@v3
        with:
          name: theta.zip
          path: theta.zip

  benchmarkSuite:
    name: Create a fairly minimal benchmark suite from sv-benchmarks
    runs-on:
      - ubuntu-latest
    steps:
      - run: git clone --no-checkout --depth 1 https://gitlab.com/sosy-lab/benchmarking/sv-benchmarks/
      - run: |
          cd sv-benchmarks
          git sparse-checkout set --no-cone "c/ReachSafety*.set" "c/ConcurrencySafety-*.set" c/NoDataRace-Main.set "c/**/*.prp" "c/**/*.i" "c/**/*.c"
      - run: |
          cd sv-benchmarks
          git checkout main
      - run: zip sv-benchmarks-full.zip sv-benchmarks/c -r
      - uses: actions/upload-artifact@v3
        with:
          name: sv-benchmarks-full.zip
          path: sv-benchmarks-full.zip
      - run: |
          cd sv-benchmarks
          cat c/*set | awk 'NF' | sed '/^#/d' | sed 's/^/c\//' >> .git/info/sparse-checkout 
      - run: |
          cd sv-benchmarks
          git sparse-checkout reapply
      - run: |
          cd sv-benchmarks
          for i in c/*.set; do for taskCollection in $(cat $i | awk 'NF' | sed '/^#/d' ); do for task in $(bash -c "ls c/$taskCollection | head -n2"); do echo ${task#c/}; done; done > ${i%.set}-smoketest.set; done
      - run: |
          cd sv-benchmarks
          git sparse-checkout set --no-cone "c/ReachSafety*.set" "c/ConcurrencySafety-*.set" c/NoDataRace-Main.set "c/**/*.prp"
      - run: |
          cd sv-benchmarks
          for i in $(cat c/*-smoketest.set); do echo c/$i >> .git/info/sparse-checkout; done
      - run: |
          cd sv-benchmarks
          git sparse-checkout reapply
      - run: |
          cd sv-benchmarks
          for i in $(cat c/*-smoketest.set); do cat c/$i | grep input_files | awk ' { print $2 } ' | xargs printf "c/%s/%s\n" $(dirname $i) >> .git/info/sparse-checkout; done
      - run: |
          cd sv-benchmarks
          git sparse-checkout reapply
      - run: |
          cd sv-benchmarks
          for i in c/*-smoketest.set; do mv $i ${i%-smoketest.set}.set; done
      - run: zip sv-benchmarks.zip sv-benchmarks/c -r
      - uses: actions/upload-artifact@v3
        with:
          name: sv-benchmarks.zip
          path: sv-benchmarks.zip

  test-verif:
    name: Test xcfa-cli with benchexec
    needs: [assemble, benchmarkSuite]
    runs-on: ubuntu-latest
    steps:
      - run: sudo add-apt-repository ppa:sosy-lab/benchmarking && sudo apt update && sudo apt install benchexec openjdk-17-jre-headless libgomp1 libmpfr6 unzip -y
      - uses: actions/download-artifact@v3
        with:
          name: theta.zip
      - uses: actions/download-artifact@v3
        with:
          name: sv-benchmarks.zip
      - run: |
          mkdir theta
          pushd theta
          unzip ../theta.zip
          popd
      - run: unzip sv-benchmarks.zip
      - run: |
          pushd theta 
          wget https://gitlab.com/sosy-lab/sv-comp/bench-defs/-/raw/main/benchmark-defs/theta.xml
          sed -i 's/memlimit="15 GB"/memlimit="6 GB"/g' theta.xml
          sed -i 's/cpuCores="8"/cpuCores="2"/g' theta.xml
          sed -i 's/timelimit="15 min"/timelimit="2 min"/g' theta.xml
          sed -i 's/hardtimelimit="16 min"/hardtimelimit="3 min"/g' theta.xml
          sudo chmod o+wt /sys/fs/cgroup/cpu,cpuacct/system.slice/benchexec-cgroup.service /sys/fs/cgroup/cpuset/system.slice/benchexec-cgroup.service /sys/fs/cgroup/memory/system.slice/benchexec-cgroup.service || ls /sys/fs/cgroup -R
          sudo benchexec theta.xml --read-only-dir / --overlay-dir /home
          popd
      - uses: actions/upload-artifact@v3
        with:
          name: verif-results
          path: theta/results

  test-parse:
    name: Test xcfa-cli parsing
    needs: [assemble, benchmarkSuite]
    runs-on: ubuntu-latest
    steps:
      - run: sudo add-apt-repository ppa:sosy-lab/benchmarking && sudo apt update && sudo apt install benchexec openjdk-17-jre-headless libgomp1 libmpfr6 unzip -y
      - uses: actions/download-artifact@v3
        with:
          name: theta.zip
      - uses: actions/download-artifact@v3
        with:
          name: sv-benchmarks.zip
      - run: |
          mkdir theta
          pushd theta
          unzip ../theta.zip
          popd
      - run: unzip sv-benchmarks.zip
      - run: |
          pushd theta 
          wget https://gitlab.com/sosy-lab/sv-comp/bench-defs/-/raw/main/benchmark-defs/theta.xml
          sed -i 's/memlimit="15 GB"/memlimit="6 GB"/g' theta.xml
          sed -i 's/cpuCores="8"/cpuCores="2"/g' theta.xml
          sed -i 's/timelimit="15 min"/timelimit="1 min"/g' theta.xml
          sed -i 's/hardtimelimit="16 min"/hardtimelimit="1 min"/g' theta.xml
          sed -i 's/witness-only/no-analysis/g' theta.xml
          sudo chmod o+wt /sys/fs/cgroup/cpu,cpuacct/system.slice/benchexec-cgroup.service /sys/fs/cgroup/cpuset/system.slice/benchexec-cgroup.service /sys/fs/cgroup/memory/system.slice/benchexec-cgroup.service || ls /sys/fs/cgroup -R
          sudo benchexec theta.xml --read-only-dir / --overlay-dir /home
          popd
      - uses: actions/upload-artifact@v3
        with:
          name: parsing-results
          path: theta/results


  deploy:
    name: Deploy results 
    needs: [test-verif, test-parse]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: parsing-results
          path: parsing-results
      - uses: actions/download-artifact@v3
        with:
          name: verif-results
          path: verif-results
      - run: |
          pushd parsing-results
          unzip *logfiles.zip
          rm *logfiles.zip
          popd
      - run: |
          pushd verif-results
          unzip *logfiles.zip
          rm *logfiles.zip
          popd
      - run: sudo add-apt-repository ppa:sosy-lab/benchmarking && sudo apt update && sudo apt install benchexec unzip -y
      - run: for i in parsing-results/*xml.bz2; do table-generator $i; done
      - run: for i in verif-results/*xml.bz2; do table-generator $i; done
      - run: for i in parsing-results/*html; do sed -i 's/\.\.\/\.\.\/sv-benchmarks\//https:\/\/gitlab\.com\/sosy-lab\/benchmarking\/sv-benchmarks\/-\/raw\/main\//g' $i; done
      - run: for i in verif-results/*html; do sed -i 's/\.\.\/\.\.\/sv-benchmarks\//https:\/\/gitlab\.com\/sosy-lab\/benchmarking\/sv-benchmarks\/-\/raw\/main\//g' $i; done
      - run: |
          pushd parsing-results
          rm *xml.bz2
          rm *diff*
          find * -name "*.html" | awk ' { print "<a href="$1">"$1"</a><br/>" }' > index.html
          popd
      - run: |
          pushd verif-results
          rm *xml.bz2
          rm *diff*
          find * -name "*.html" | awk ' { print "<a href="$1">"$1"</a><br/>" }' > index.html
          popd
      - run: |
          mkdir ct -p
          mv parsing-results ct/
          mv verif-results ct/
          pushd ct
          echo '<a href="parsing-results">Parsing Results</a><br/>' > index.html
          echo '<a href="verif-results">Verification Results (excerpt)</a><br/>' > index.html
          popd 
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: ct
          target_folder: ct